```{r}
a <- 5
plot(a)
a <- 5
a <- 5
a <- 5
plot(a)
install.packages("spDataLarge")
install.packages("stplanr")
install.packages("tmap")
install.packages("dplyr")
install.packages("sf")
---
title: "R Notebook"
output: html_notebook
---
```{r}
library(sf)
library(dplyr)
library(stplanr)
library(tmap)
bristol_region = osmdata::getbb("Bristol", format_out = "sf_polygon")
installed.packages(spDataLarge)
installed.packages("spDataLarge")
install.packages("spDataLarge")
library(sf)
library(dplyr)
library(stplanr)
library(tmap)
This is an [R Markdown](http://rmarkdown.rstudio.com) Notebook. When you execute code within the notebook, the results appear beneath the code.
Try executing this chunk by clicking the *Run* button within the chunk or by placing your cursor inside it and pressing *Cmd+Shift+Enter*.
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
devtools::install_github("Nowosad/spDataLarge")
library(sf)
library(dplyr)
library(stplanr)
library(tmap)
library(spDataLarge)
install.packages("shinythemes")
install.packages("shiny")
install.packages("shiny")
install.packages("leaflet")
install.packages("leaflet")
install.packages("geojsonio")
install.packages("geojsonio")
install.packages("plotly")
install.packages("plotly")
install.packages("RColorBrewer")
install.packages("RColorBrewer")
install.packages("viridis")
install.packages("viridis")
install.packages("RColorBrewer")
install.packages("RColorBrewer")
install.packages("ggplot2")
install.packages("RColorBrewer")
install.packages("plotly")
install.packages("RColorBrewer")
install.packages("viridis")
install.packages("RColorBrewer")
install.packages("ggplot2")
install.packages("reshape2")
install.packages("ggplot2")
install.packages("reshape2")
install.packages("raster")
install.packages("reshape2")
install.packages("raster")
install.packages("rasterVis")
install.packages("raster")
install.packages("raster")
install.packages("raster")
install.packages("rasterVis")
install.packages("raster")
install.packages("raster")
install.packages("sjPlot")
install.packages("rgdal")
install.packages("rgdal")
install.packages("ggmap")
install.packages("leaflet.extras")
library(sf)
library(dplyr)
library(stplanr)        # geographic transport data package
library(tmap)           # visualization package (see Chapter 8)
library(spDataLarge)
library(shinythemes)
library(shiny)
library(leaflet)
library(leaflet.extras)
library(geojsonio)
library(plotly)
library(RColorBrewer)
library(viridis)
library(ggplot2)
library(reshape2)
library(raster)
library(raster)
library(raster)
library(sf)
library(dplyr)
library(stplanr)        # geographic transport data package
library(tmap)           # visualization package (see Chapter 8)
library(spDataLarge)
library(shinythemes)
library(shiny)
library(leaflet)
library(leaflet.extras)
library(geojsonio)
library(plotly)
library(RColorBrewer)
library(viridis)
library(ggplot2)
library(reshape2)
library(raster)
library(raster)
library(sf)
library(dplyr)
library(stplanr)        # geographic transport data package
library(tmap)           # visualization package (see Chapter 8)
library(spDataLarge)
library(shinythemes)
library(shiny)
library(leaflet)
library(leaflet.extras)
library(geojsonio)
library(plotly)
library(RColorBrewer)
library(viridis)
library(ggplot2)
library(reshape2)
library(raster)
library(rasterVis)
library(sjPlot)
library(sjPlot)
library(rgdal)
library(ggmap)
CT <- geojsonio::geojson_read(“data/TractPolygonsCompressed.json”, what=“sp”)
CT <- geojsonio::geojson_read("data/TractPolygonsCompressed.json", what="sp")
head(CT)
zones_data <- geojsonio::geojson_read("data/TractTractLinesCompressed.json", what="sp")
#subselect Montreal Area
CT <- CT[CT@data$CMANAME == "Montral",]
save(CT, file= "data/CT.Rdata")
zones_data <- zones_data[zones_data@data$Origin == "Montral",]  #still we should find a column represent Montreal for sub selection
save(zones_data, file="data/zones_data.Rdata")
load("data/CT.Rdata")
load("data/zones_data.Rdata")
load("data/CT.Rdata")
load("data/zones_data.Rdata")
View(zones_data)
install.packages(c("furrr", "ggthemes", "googleLanguageR", "huge", "magick", "params", "pdftools", "quanteda", "readtext", "stm", "stminsights", "tesseract", "tidytext", "tiff", "tm", "wesanderson"))
install.packages("rhd5f")
install.packages("h5")
install.packages("h5")
install.packages("rhdf5")
install.packages("h5")
install.packages("h5")
install.packages("h5")
install.packages("h5")
install.packages("h5")
install.packages("h5")
library(h5)
install.packages("h5")
install.package("h5")
install.packages("h5")
install.packages("h5")
install.packages("h5")
install.packages("h5")
install.packages("Rcpp")
install.packages("Rcpp")
install.packages("Rcpp")
install.packages("Rcpp")
install.packages("Rcpp")
install.packages("h5")
install.packages("Rcpp")
install.packages("Rcpp")
install.packages("h5")
install.packages("hdf5r")
library(h5)
library(hdf5r)
file <- h5file("data/test.h5")
file
dater <- h5file(name = 'Sus_date.h5', 'a')
dater <- h5file(name = "Sus_date.h5", 'a')
h5file(name = "Sus_date.h5", 'a')
h5file(name = "Sus_data.h5", 'a')
dater <- h5file(name = "Sus_date.h5", 'a')
h5file
dater <- h5file( "Sus_date.h5", 'a')
dater
list.datasets(dater, recursive = TRUE)
dater['testgroup/testset'] <- matrix(1:9, nrow = 3)
dater <- h5file( "Sus_date.h5", 'a')
list.datasets(dater, recursive = TRUE)
dater['testgroup/testset'] <- matrix(1:9, nrow = 3)
dater
dater['testgroup/testset'] <- matrix(1:9, nrow = 3)
dater['testgroup']
dater
list.datasets(dater, recursive = TRUE)
dater['testgroup/testset'] <- matrix(1:9, nrow = 3)
df<- matrix(1:9, nrow = 3)
h5write(df, "Sus_date.h5","df")
library(hdf5r)
df<- matrix(1:9, nrow = 3)
h5write(df, "Sus_date.h5","df")
dater['testgroup/testset'] <- matrix(1:9, nrow = 3)
library(hdf5r)
library(h5)
dater <- h5file( "Sus_date.h5", 'a')
list.datasets(dater, recursive = TRUE)
dater['testgroup/testset'] <- matrix(1:9, nrow = 3)
dater['testgroup']
df
h5write(df, "Sus_date.h5","df")
install.packages("h5")
library(hdf5r)
h5createFile("myhdf5file.h5")
library(hdf5r)
h5createFile("myhdf5file.h5")
install.packages("BiocManager")
BiocManager::install("rhdf5")
h5createFile("myhdf5file.h5")
library(hdf5r)
library(h5)
library(h5)
load("data/zones_data.Rdata")
library(h5)
library(hdf5r)
h5createFile("myhdf5file.h5")
library(hdf5r)
library(h5)
dater <- h5file( "Sus_date.h5", 'a')
list.datasets(dater, recursive = TRUE)
dater['testgroup/testset'] <- matrix(1:9, nrow = 3)
install.packages("h5")
library(sf)
library(dplyr)
library(stplanr)        # geographic transport data package
library(tmap)           # visualization package (see Chapter 8)
library(spDataLarge)
library(shinythemes)
library(shiny)
library(leaflet)
library(leaflet.extras)
library(geojsonio)
library(plotly)
library(RColorBrewer)
library(viridis)
library(ggplot2)
library(reshape2)
library(raster)
library(rasterVis)
library(sjPlot)
library(rgdal)
library(ggmap)
install.packages("h5")
install.packages("hdf5r")
install.packages("hdf5r")
install.packages("h5")
install.packages("networkD3")
library(networkD3)
install.packages("webshop")
nodes <- read.csv(file=“/Users/Robin/Dropbox//SUS MSSI/nodes.csv”)
nodes <- read.csv(file=“/Users/Robin/Dropbox/SUS MSSI/nodes.csv”)
nodes <- read.csv(file=“/Users/Robin/Dropbox/"SUS MSSI"/nodes.csv)
?read.csv
nodes <- read.csv(file="/Users/Robin/Dropbox/SUS MSSI/nodes.csv")
nodes <- read.csv(file="/Users/Robin/Dropbox/SUS MSSI/nodes.csv")
nodes <- data.frame(nodes)
colnames(nodes)<- c(“name”,    “ID”,    “node_group”)
nodes <- read.csv(file="/Users/Robin/Dropbox/SUS MSSI/nodes.csv")
nodes <- data.frame(nodes)
colnames(nodes)<- c("name",    "ID",    "node_group")
rownames(nodes) <- seq(1,length(nodes[,1]))
links <- read.csv(file=“/Users/Ty/Dropbox/Dendritic connectivity/MSSI funding proposal/links.csv”)
nodes <- read.csv(file="/Users/Robin/Dropbox/SUS MSSI/nodes.csv")
nodes <- data.frame(nodes)
colnames(nodes)<- c("name",    "ID",    "node_group")
rownames(nodes) <- seq(1,length(nodes[,1]))
links <- read.csv(file="/Users/Ty/Dropbox/Dendritic connectivity/MSSI funding proposal/links.csv")
nodes <- read.csv(file="/Users/Robin/Dropbox/SUS MSSI/nodes.csv")
nodes <- data.frame(nodes)
colnames(nodes)<- c("name",    "ID",    "node_group")
rownames(nodes) <- seq(1,length(nodes[,1]))
links <- read.csv(file="/Users/Robin/Dropbox/SUS MSSI/links.csv")
links <- data.frame(links)
colnames(links)<- c(“source”, “target”, “value”, “group_type”)
nodes <- read.csv(file="/Users/Robin/Dropbox/SUS MSSI/nodes.csv")
nodes <- data.frame(nodes)
colnames(nodes)<- c("name",    "ID",    "node_group")
rownames(nodes) <- seq(1,length(nodes[,1]))
links <- read.csv(file="/Users/Robin/Dropbox/SUS MSSI/links.csv")
links <- data.frame(links)
colnames(links)<- c("source", "target", "value", "group_type")
rownames(links) <- seq(1,length(links[,1]))
#master_plan <-
sankeyNetwork(Links = links, Nodes = nodes, Source = “source”,
nodes <- read.csv(file="/Users/Robin/Dropbox/SUS MSSI/nodes.csv")
nodes <- data.frame(nodes)
colnames(nodes)<- c("name",    "ID",    "node_group")
rownames(nodes) <- seq(1,length(nodes[,1]))
links <- read.csv(file="/Users/Robin/Dropbox/SUS MSSI/links.csv")
links <- data.frame(links)
colnames(links)<- c("source", "target", "value", "group_type")
rownames(links) <- seq(1,length(links[,1]))
#master_plan <-
sankeyNetwork(Links = links, Nodes = nodes, Source = "source",
Target = "target", Value = "value", NodeID = "name",
fontSize = 14, nodeWidth = 10, LinkGroup = "group_type",  NodeGroup = NULL,
colourScale = JS("d3.scaleOrdinal(d3.schemeCategory20);"), sinksRight = FALSE, iterations =18, height = 800, width=1200, nodePadding = 10)
nodes <- read.csv(file="/Users/Robin/Dropbox/SUS MSSI/nodes.csv")
nodes <- data.frame(nodes)
colnames(nodes)<- c("name",    "ID",    "node_group")
rownames(nodes) <- seq(1,length(nodes[,1]))
links <- read.csv(file="/Users/Robin/Dropbox/SUS MSSI/links.csv")
links <- data.frame(links)
colnames(links)<- c("source", "target", "value", "group_type")
rownames(links) <- seq(1,length(links[,1]))
#master_plan <-
sankeyNetwork(Links = links, Nodes = nodes, Source = "source",
Target = "target", Value = "value", NodeID = "name",
fontSize = 14, nodeWidth = 10, LinkGroup = "group_type",  NodeGroup = NULL,
colourScale = JS("d3.scaleOrdinal(d3.schemeCategory20);"), sinksRight = FALSE, iterations =18, height = 800, width=1200, nodePadding = 10)
nodes <- read.csv(file="/Users/Robin/Dropbox/SUS MSSI/nodes.csv")
nodes <- data.frame(nodes)
colnames(nodes)<- c("name",    "ID",    "node_group")
rownames(nodes) <- seq(1,length(nodes[,1]))
links <- read.csv(file="/Users/Robin/Dropbox/SUS MSSI/links.csv")
links <- data.frame(links)
colnames(links)<- c("source", "target", "value", "group_type")
rownames(links) <- seq(1,length(links[,1]))
#master_plan <-
sankeyNetwork(Links = links, Nodes = nodes, Source = "source",
Target = "target", Value = "value", NodeID = "name",
fontSize = 14, nodeWidth = 10, LinkGroup = "group_type",  NodeGroup = NULL,
colourScale = JS("d3.scaleOrdinal(d3.schemeCategory20);"), sinksRight = FALSE, iterations =18, height = 800, width=1200, nodePadding = 10)
nodes <- read.csv(file="/Users/Robin/Dropbox/SUS MSSI/nodes.csv")
nodes <- data.frame(nodes)
colnames(nodes)<- c("name",    "ID",    "node_group")
rownames(nodes) <- seq(1,length(nodes[,1]))
links <- read.csv(file="/Users/Robin/Dropbox/SUS MSSI/links.csv")
links <- data.frame(links)
colnames(links)<- c("source", "target", "value", "group_type")
rownames(links) <- seq(1,length(links[,1]))
#master_plan <-
sankeyNetwork(Links = links, Nodes = nodes, Source = "source",
Target = "target", Value = "value", NodeID = "name",
fontSize = 14, nodeWidth = 10, LinkGroup = "group_type",  NodeGroup = NULL,
colourScale = JS("d3.scaleOrdinal(d3.schemeCategory20);"), sinksRight = FALSE, iterations =18, height = 800, width=1200, nodePadding = 10)
nodes <- read.csv(file="/Users/Robin/Dropbox/SUS MSSI/nodes.csv")
nodes <- data.frame(nodes)
colnames(nodes)<- c("name",    "ID",    "node_group")
rownames(nodes) <- seq(1,length(nodes[,1]))
links <- read.csv(file="/Users/Robin/Dropbox/SUS MSSI/links.csv")
links <- data.frame(links)
colnames(links)<- c("source", "target", "value", "group_type")
rownames(links) <- seq(1,length(links[,1]))
#master_plan <-
sankeyNetwork(Links = links, Nodes = nodes, Source = "source",
Target = "target", Value = "value", NodeID = "name",
fontSize = 14, nodeWidth = 10, LinkGroup = "group_type",  NodeGroup = NULL,
colourScale = JS("d3.scaleOrdinal(d3.schemeCategory20);"), sinksRight = FALSE, iterations =18, height = 800, width=1200, nodePadding = 10)
nodes <- read.csv(file="/Users/Robin/Dropbox/SUS MSSI/nodes.csv")
nodes <- data.frame(nodes)
colnames(nodes)<- c("name",    "ID",    "node_group")
rownames(nodes) <- seq(1,length(nodes[,1]))
links <- read.csv(file="/Users/Robin/Dropbox/SUS MSSI/links.csv")
links <- data.frame(links)
colnames(links)<- c("source", "target", "value", "group_type")
rownames(links) <- seq(1,length(links[,1]))
#master_plan <-
sankeyNetwork(Links = links, Nodes = nodes, Source = "source",
Target = "target", Value = "value", NodeID = "name",
fontSize = 14, nodeWidth = 10, LinkGroup = "group_type",  NodeGroup = NULL,
colourScale = JS("d3.scaleOrdinal(d3.schemeCategory20);"), sinksRight = FALSE, iterations =18, height = 800, width=1200, nodePadding = 10)
nodes <- read.csv(file="/Users/Robin/Dropbox/SUS MSSI/nodes.csv")
nodes <- data.frame(nodes)
colnames(nodes)<- c("name",    "ID",    "node_group")
rownames(nodes) <- seq(1,length(nodes[,1]))
links <- read.csv(file="/Users/Robin/Dropbox/SUS MSSI/links.csv")
links <- data.frame(links)
colnames(links)<- c("source", "target", "value", "group_type")
rownames(links) <- seq(1,length(links[,1]))
#master_plan <-
sankeyNetwork(Links = links, Nodes = nodes, Source = "source",
Target = "target", Value = "value", NodeID = "name",
fontSize = 14, nodeWidth = 10, LinkGroup = "group_type",  NodeGroup = NULL,
colourScale = JS("d3.scaleOrdinal(d3.schemeCategory20);"), sinksRight = FALSE, iterations =18, height = 800, width=1200, nodePadding = 10)
nodes <- read.csv(file="/Users/Robin/Dropbox/SUS MSSI/nodes.csv")
links <- read.csv(file="/Users/Robin/Dropbox/SUS MSSI/links.csv")
getwd()
nodes <- read.csv(file="nodes.csv")
links <- read.csv(file="links.csv")
links <- read.csv(file="links - Sheet1.csv")
nodes <- read.csv(file="nodes.csv")
nodes <- read.csv(file="nodes.csv", as.is=TRUE)
read.csv(file="nodes.csv", as.is=TRUE)
links <- read.csv(file="links.csv")
links <- read.csv(file="links.csv")
read.csv(file="links.csv")
links <- read.csv(file="links.csv")
links <- read.csv(file="links.csv")
links <- read.csv(file="links.csv")
nodes <- read.csv(file="nodes.csv", as.is=TRUE)
library(networkD3)
nodes <- read.csv(file="nodes.csv", as.is=TRUE)
nodes <- read.csv(file="nodes.csv", as.is=TRUE)
nodes <- read.csv(file="nodes.csv", as.is=TRUE)
links <- read.csv(file="links.csv")
nodes <- read.csv(file="nodes.csv", as.is=TRUE)
nodes <- data.frame(nodes)
colnames(nodes)<- c("name",    "ID",    "node_group")
rownames(nodes) <- seq(1,length(nodes[,1]))
links <- read.csv(file="links.csv")
links <- data.frame(links)
colnames(links)<- c("source", "target", "value", "group_type")
rownames(links) <- seq(1,length(links[,1]))
#master_plan <-
sankeyNetwork(Links = links, Nodes = nodes, Source = "source",
Target = "target", Value = "value", NodeID = "name",
fontSize = 14, nodeWidth = 10, LinkGroup = "group_type",  NodeGroup = NULL,
colourScale = JS("d3.scaleOrdinal(d3.schemeCategory20);"), sinksRight = FALSE, iterations =18, height = 800, width=1200, nodePadding = 10)
